version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - ENV=${ENV:-development}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_SSLMODE=${DB_SSLMODE:-require}
      - JWT_SECRET=${JWT_SECRET}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - CORS_ORIGINS=${CORS_ORIGINS:-*}
    restart: unless-stopped
    networks:
      - enterprise-video-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      timeout: 5s
      interval: 30s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=${VITE_API_URL:-http://localhost:8081}
      - VITE_WS_URL=${VITE_WS_URL:-ws://localhost:8081}
    restart: unless-stopped
    networks:
      - enterprise-video-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      timeout: 5s
      interval: 30s
      retries: 3
      start_period: 40s

networks:
  enterprise-video-network:
    driver: bridge

